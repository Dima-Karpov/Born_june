{"version":3,"sources":["p2-homeworks/h2/HW2.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h5/Header.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.module.css","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.tsx","p2-homeworks/h7/common/c6-SuperRadio/SuperRadio.tsx","p2-homeworks/h7/HW7.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Error404","SuperSelect","options","onChange","onChangeOption","restProps","mappedOptions","map","option","i","value","e","currentTarget","SuperRadio","type","name","onChangeCallback","checked","arr","HW7","useState","Junior","JuniorPlus","Message","props","className","s","message","src","avatar","corner","blok","text","time","messageData","HW1","Affair","affair","deleteCallback","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","a","buttonNiz","setFilter","HW2","priority","affairs","setAffairs","filter","filteredAffairs","filterAffairs","title","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","onKeyPressHandler","errorMessages","input","onKeyDown","btn","total","GreetingContainer","users","addUserCallback","setName","setError","trim","alert","length","key","HW3","setUsers","user","v1","SuperInputText","onChangeText","onKeyPress","onEnter","spanClassName","finalSpanClassName","finalInputClassName","errorInput","superInput","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","HW4","setText","showAlert","setChecked","column","blue","disabled","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","span","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","undefined","PreJunior","PATH","Routes","path","exact","render","to","Header","header","link","activeClassName","active","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.e9aefc41.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"HW2_title__2XK6V\",\"deleteCallback\":\"HW2_deleteCallback__2eaoZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__2Z2BF\",\"error\":\"Greeting_error__2tS0q\",\"errorMessages\":\"Greeting_errorMessages__3OT9b\",\"btn\":\"Greeting_btn__b10Re\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Header_link__2kHLf\",\"active\":\"Header_active__ulipB\",\"blok\":\"Header_blok__1UJ7b\",\"header\":\"Header_header__1Rl7H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__2M_CF\",\"avatar\":\"Message_avatar__Xm_46\",\"name\":\"Message_name__woyZa\",\"text\":\"Message_text__263p5\",\"time\":\"Message_time__3xDY8\",\"blok\":\"Message_blok__1vwDg\",\"corner\":\"Message_corner__szsCn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__2-bPx\",\"superInput\":\"SuperInputText_superInput__1BhbD\",\"errorInput\":\"SuperInputText_errorInput__3pptL\",\"error\":\"SuperInputText_error__2GsaM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__1H-kB\",\"red\":\"SuperButton_red__3qfjg\",\"btn\":\"SuperButton_btn__3Lh5f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__QvB_i\",\"column\":\"HW4_column__3nKQj\",\"testSpanError\":\"HW4_testSpanError__1cuJe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__28vfF\",\"spanClassName\":\"SuperCheckbox_spanClassName__3APen\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__ks4Aq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"span\":\"SuperEditableSpan_span__2fVce\"};","import React from 'react'\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div>\r\n            <div>404</div>\r\n            <div>Page not found!</div>\r\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404\r\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react'\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\n\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n    options: Array<string>\r\n    onChangeOption: (option: string) => void\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n    {\r\n        options,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n\r\n\r\n    const mappedOptions = options ? options.map((option, i) => (<option key={option + '-' + i} value={option}>{i}</option>)) : [] \r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeOption && onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <select onChange={onChangeCallback} {...restProps}>\r\n            {mappedOptions}\r\n        </select>\r\n    )\r\n}\r\n\r\nexport default SuperSelect\r\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    options: Array<string>\r\n    onChangeOption: (option: string) => void\r\n}\r\n\r\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        type, name,\r\n        options, value,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeOption && onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n\r\n    const mappedOptions = options ? options.map((option, i) => ( \r\n        <label key={name + '-' + i}>\r\n            <input\r\n                type={'radio'}\r\n                onChange={onChangeCallback}\r\n                checked={option === value}\r\n                value={option}\r\n                name={name}\r\n            />\r\n            {i}\r\n        </label>\r\n    )) : []\r\n\r\n    return (\r\n        <>\r\n            {mappedOptions}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperRadio\r\n","import React, {useState} from 'react'\r\nimport SuperSelect from './common/c5-SuperSelect/SuperSelect'\r\nimport SuperRadio from './common/c6-SuperRadio/SuperRadio'\r\n\r\nconst arr: Array<string> = ['x', 'y', 'z']\r\n\r\nfunction HW7() {\r\n    const [value, onChangeOption] = useState(arr[0])\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 7\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperSelect\r\n                    options={arr}\r\n                    value={value}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n            </div>\r\n            <div>\r\n                <SuperRadio\r\n                    name={'radio'}\r\n                    options={arr}\r\n                    value={value}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperSelect/>*/}\r\n            {/*<AlternativeSuperRadio/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW7\r\n","import React from 'react'\r\nimport HW7 from '../../h7/HW7'\r\n\r\nexport const Junior = () => {\r\n    return (\r\n        <div>\r\n            Junior\r\n            <HW7/>\r\n        </div>\r\n    );\r\n}","import React from 'react'\r\n\r\nexport const JuniorPlus = () => {\r\n    return (\r\n        <div>\r\n            JuniorPlus\r\n        </div>\r\n    );\r\n}","import React from 'react'\r\nimport s from './Message.module.css'\r\n\r\nexport type MessageDataType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\nfunction Message(props: MessageDataType) {\r\n    return (\r\n        <div className={s.message}>\r\n            <img src={props.avatar} className={s.avatar} ></img>\r\n            <div className={s.corner}></div>\r\n            <div className={s.blok}>\r\n                <div className={s.name}>{props.name}</div>\r\n                <div className={s.text}>{props.message}</div>\r\n                <div className={s.time}>{props.time}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport Message from './Message'\r\n\r\nconst messageData = {\r\n    avatar: 'https://steamuserimages-a.akamaihd.net/ugc/772863840223603020/AAAF98AA16C0AFAF36AB2D8B2F1D3FAE48FF7F71/?imw=512&amp;imh=384&amp;ima=fit&amp;impolicy=Letterbox&amp;imcolor=%23000000&amp;letterbox=true',\r\n    name: 'Артем',\r\n    message: 'npm start нажимал?',\r\n    time: '22:00',\r\n}\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr />\r\n            homeworks 1\r\n\r\n            {/*should work (должно работать)*/}\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n\r\n\r\n            <hr />\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/* <AlternativeMessage/> */}\r\n            <hr />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React from 'react'\r\nimport { AffairType } from './HW2'\r\nimport s from './HW2.module.css'\r\n\r\ntype AffairPropsType = {\r\n    affair: AffairType\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => { props.deleteAffairCallback(props.affair._id) }// need to fix\r\n\r\n    return (\r\n        <div>\r\n            {props.affair.name}\r\n            <button className={s.deleteCallback} onClick={deleteCallback}>X</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport { AffairType, FilterType } from './HW2'\r\nimport s from './HW2.module.css'\r\n\r\n type AffairsPropsType = {\r\n    data: Array<AffairType>\r\n    setFilter: (value: FilterType) => void\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n\r\n    const setAll = () =>  props.setFilter('all');\r\n    const setHigh = () => props.setFilter('high');\r\n    const setMiddle = () => props.setFilter('middle');\r\n    const setLow = () => props.setFilter('low');\r\n\r\n    return (\r\n        <div className={s.buttonNiz}>\r\n            {mappedAffairs}\r\n            \r\n            <button className={s.deleteCallback} onClick={setAll}>All</button>\r\n            <button className={s.deleteCallback} onClick={setHigh}>High</button>\r\n            <button className={s.deleteCallback} onClick={setMiddle}>Middle</button>\r\n            <button className={s.deleteCallback} onClick={setLow}>Low</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, { useState } from 'react'\r\nimport Affairs from './Affairs'\r\nimport s from './HW2.module.css'\r\n\r\n// types\r\nexport type AffairPriorityType = 'high' | 'low' | 'middle'\r\n\r\nexport type AffairType = {\r\n    _id: number\r\n    name: string\r\n    priority: string\r\n}\r\n\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => {\r\n    if (filter === 'all') return affairs\r\n    else return affairs.filter(a => a.priority === filter);\r\n}\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => {\r\n    return affairs.filter(a => a._id !== _id);\r\n}\r\n\r\nfunction HW2() {\r\n\r\n    const [affairs, setAffairs] = useState<Array<AffairType>>([\r\n        { _id: 1, name: 'React', priority: 'high' },\r\n        { _id: 2, name: 'anime', priority: 'low' },\r\n        { _id: 3, name: 'Redax', priority: 'low' },\r\n        { _id: 4, name: 'work', priority: 'high' },\r\n        { _id: 6, name: 'html & css', priority: 'middle' },\r\n    ]);\r\n\r\n    const [filter, setFilter] = useState<FilterType>('all');\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter);\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id));\r\n\r\n    return (\r\n        <div className={s.title}>\r\n            <hr />\r\n\r\n            Homeworks 2 -\r\n            Works\r\n\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n            <hr />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, { ChangeEvent, KeyboardEvent } from 'react'\r\nimport s from './Greeting.module.css'\r\n\r\nexport type GreetingPropsType = {\r\n    name: string // need to fix any\r\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\r\n    addUser: () => void // need to fix any\r\n    error: string | null // need to fix any\r\n    totalUsers: number // need to fix any\r\n    onKeyPressHandler: (e: KeyboardEvent<HTMLInputElement>) => void\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    { name, setNameCallback, addUser, error, totalUsers, onKeyPressHandler } // деструктуризация пропсов\r\n) => {\r\n    const inputClass = s.error ? s.errorMessages : s.error  // need to fix with (?:)\r\n\r\n    return (\r\n        <div className={s.blok}>\r\n            <div className={s.input}>\r\n                <input\r\n                    value={name}\r\n                    onChange={setNameCallback}\r\n                    onKeyDown={onKeyPressHandler}\r\n                // className={inputClass} \r\n                />\r\n\r\n            \r\n                <button className={s.btn} onClick={addUser}>add</button>\r\n                <div className={s.total}>{totalUsers}</div>\r\n            </div>\r\n            {/* <div className={s.error}>{error}</div> */}\r\n\r\n            {error && <div className={s.errorMessages}>Name is requred</div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n\r\n","import React, { ChangeEvent, KeyboardEvent, useState } from 'react'\r\nimport Greeting from './Greeting'\r\nimport { UserType } from './HW3'\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType> // need to fix any\r\n    addUserCallback: (name: string) => void // need to fix any\r\n}\r\n\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({ users, addUserCallback }) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>('');\r\n    const [error, setError] = useState<string | null>(null);\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setName(e.currentTarget.value)\r\n    }\r\n\r\n    const addUser = () => {\r\n\r\n        if (name.trim() !== ('')) {\r\n            addUserCallback(name)\r\n            alert(`Hello  ${name}!`) // need to fix\r\n            setName('')\r\n        } else{\r\n            setError('Name is requred')\r\n        }\r\n    }\r\n\r\n    const onKeyPressHandler =(e: KeyboardEvent<HTMLInputElement>) => {\r\n        setError(null);\r\n        if(e.key === 'Enter' && name){\r\n            addUser();\r\n        }\r\n    }\r\n\r\n    const totalUsers = users.length // need to fix\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n            onKeyPressHandler={onKeyPressHandler}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, { useState } from 'react'\r\nimport { v1 } from 'uuid'\r\nimport GreetingContainer from './GreetingContainer'\r\n\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string // need to fix any\r\n    name: string // need to fix any\r\n}\r\n\r\n// уровень работы с глобальными данными\r\n\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\r\n\r\n    const addUserCallback = (name: string) => { // need to fix any\r\n        const user = {\r\n            _id: v1(),\r\n            name: name\r\n        };\r\n        setUsers([...users, user]) // need to fix\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr />\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer\r\n                users={users}\r\n                addUserCallback={addUserCallback} />\r\n\r\n            <hr />\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${s.btn ? s.btn : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e);\r\n        \r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)// сделайте так чтоб работал onChange и onChangeChecked\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    // spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\r\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText'\r\nimport s from './SuperEditableSpan.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n}\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n    {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\r\n\r\n    const onEnterCallback = () => {\r\n        setEditMode(false) // выключить editMode при нажатии Enter\r\n\r\n        onEnter && onEnter()\r\n    }\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        setEditMode(false) // выключить editMode при нажатии за пределами инпута\r\n\r\n        onBlur && onBlur(e)\r\n    }\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        setEditMode(true) // включить editMode при двойном клике\r\n\r\n        onDoubleClick && onDoubleClick(e)\r\n    }\r\n\r\n    const spanClassName = `${s.span} ${className}`\r\n\r\n    return (\r\n        <> \r\n            {editMode\r\n                ? (\r\n                    <SuperInputText\r\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n\r\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                    />\r\n                ) : (\r\n                    <span\r\n                        onDoubleClick={onDoubleClickCallBack}\r\n                        className={spanClassName}\r\n\r\n                        {...restSpanProps}\r\n                    >\r\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                        &#128396;{children || restProps.value}\r\n                    </span>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperEditableSpan\r\n","// вот вам функция для сохранения объектов в память браузера\r\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\r\nexport function saveState<T>(key: string, state: T) {\r\n    const stateAsString = JSON.stringify(state)\r\n    localStorage.setItem(key, stateAsString)\r\n}\r\n\r\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\r\nexport function restoreState<T>(key: string, defaultState: T) {\r\n    let state = defaultState\r\n    const stateAsString = localStorage.getItem(key)\r\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\r\n    return state\r\n}\r\n\r\n// ---------------------------------------------------------------------------------------------------------------\r\n// пример использования:\r\ntype StateType = {\r\n    x: string\r\n    y: number\r\n}\r\n\r\n// сохраняем объект типа StateType в ячейке 'test'\r\nsaveState<StateType>('test', {x: 'A', y: 1})\r\n\r\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\r\nconst state: StateType = restoreState<StateType>('test', {x: '', y: 0})\r\n","import React, {useState} from 'react'\r\nimport SuperEditableSpan from './common/c4-SuperEditableSpan/SuperEditableSpan'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\r\nimport {restoreState, saveState} from './localStorage/localStorage'\r\n\r\nfunction HW6() {\r\n    const [value, setValue] = useState<string>('')\r\n\r\n    const save = () => {\r\n        saveState<string>('editable-span-value', value)\r\n    }\r\n    const restore = () => {\r\n        setValue(restoreState<string>('editable-span-value', value))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 6\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperEditableSpan\r\n                    value={value}\r\n                    onChangeText={setValue}\r\n                    spanProps={{children: value ? undefined : 'enter text...'}}\r\n                />\r\n            </div>\r\n            <SuperButton onClick={save}>save</SuperButton>\r\n            <SuperButton onClick={restore}>restore</SuperButton>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperEditableSpan/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW6\r\n","import React from 'react'\r\nimport HW1 from '../../h1/HW1'\r\nimport HW2 from '../../h2/HW2'\r\nimport HW3 from '../../h3/HW3'\r\nimport HW4 from '../../h4/HW4'\r\nimport HW6 from '../../h6/HW6'\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            <HW6/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PreJunior\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport Error404 from './pages/Error404'\r\nimport { Junior } from './pages/Junior'\r\nimport { JuniorPlus } from './pages/JuniorPlus'\r\nimport PreJunior from './pages/PreJunior'\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: '/pre-junior',\r\n    JUNIOR: '/junior',\r\n    JUNIOR_PLUS: '/junior-plus'\r\n    \r\n    // add paths\r\n}\r\n\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div>\r\n            {/* Switch выбирает первый подходящий роут */}\r\n            <Switch>\r\n\r\n            {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\r\n            {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\r\n            <Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\r\n\r\n            <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\r\n            <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\r\n            <Route path={PATH.JUNIOR_PLUS} render={() => <JuniorPlus/>}/>\r\n                \r\n            {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n            <Route render={() => <Error404/>}/>\r\n\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { PATH } from './Routes'\r\nimport s from './Header.module.css'\r\n\r\n\r\n\r\nfunction Header() {\r\n\r\n    return (\r\n        <div className={s.header}>\r\n            \r\n            <NavLink to = {PATH.PRE_JUNIOR} className={s.link} activeClassName={s.active}>pre-junior</NavLink>\r\n            <NavLink to = {PATH.JUNIOR} className={s.link} activeClassName={s.active}>junior</NavLink>\r\n            <NavLink to = {PATH.JUNIOR_PLUS} className={s.link} activeClassName={s.active}>junior+</NavLink>\r\n            <div className={s.blok} > </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default Header\r\n","import React, { useState } from 'react'\r\nimport { HashRouter } from 'react-router-dom'\r\nimport Header from './Header'\r\nimport Routes from './Routes'\r\n\r\nfunction HW5() {\r\n    \r\n    let [ collapsedJun, setCollapsedJun] = useState<boolean>(false)\r\n    \r\n\r\n    return (    \r\n        <div>\r\n            {/*в gh-pages лучше работает HashRouter*/}\r\n            <HashRouter>\r\n\r\n            <Header/>\r\n           \r\n            <Routes/>\r\n\r\n            </HashRouter>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW5\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1'\r\nimport HW2 from '../../../p2-homeworks/h2/HW2'\r\nimport HW3 from '../../../p2-homeworks/h3/HW3'\r\nimport HW4 from '../../../p2-homeworks/h4/HW4'\r\nimport HW5 from '../../../p2-homeworks/h5/HW5'\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            {/* <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/> */}\r\n            <HW5/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\n\r\nconst add =() => {\r\n    console.log('go')\r\n}\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}