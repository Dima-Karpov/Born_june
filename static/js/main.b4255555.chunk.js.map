{"version":3,"sources":["p2-homeworks/h2/HW2.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h5/Header.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.module.css","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Error404","Junior","JuniorPlus","Message","props","className","s","message","src","avatar","corner","blok","name","text","time","messageData","HW1","Affair","affair","deleteCallback","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","buttonNiz","setFilter","HW2","useState","priority","affairs","setAffairs","filter","filteredAffairs","filterAffairs","title","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","onKeyPressHandler","errorMessages","input","value","onChange","onKeyDown","btn","total","GreetingContainer","users","addUserCallback","setName","setError","trim","alert","length","e","currentTarget","key","HW3","setUsers","user","v1","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","setText","showAlert","setChecked","column","blue","disabled","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","span","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","undefined","PreJunior","PATH","Routes","path","exact","render","to","Header","header","link","activeClassName","active","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.b4255555.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"HW2_title__308nx\",\"deleteCallback\":\"HW2_deleteCallback__14MxQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__3zC3u\",\"error\":\"Greeting_error__2iSOB\",\"errorMessages\":\"Greeting_errorMessages__38xqm\",\"btn\":\"Greeting_btn__2DFdE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Header_link__3zPjo\",\"active\":\"Header_active__32vnu\",\"blok\":\"Header_blok__3pl4k\",\"header\":\"Header_header__2l9Zr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1QeHy\",\"avatar\":\"Message_avatar__1QnCy\",\"name\":\"Message_name__2nXce\",\"text\":\"Message_text__31jVT\",\"time\":\"Message_time__1Gg7_\",\"blok\":\"Message_blok__27tZF\",\"corner\":\"Message_corner__sgP0m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__3AJWw\",\"superInput\":\"SuperInputText_superInput__hIG9k\",\"errorInput\":\"SuperInputText_errorInput__2y972\",\"error\":\"SuperInputText_error__pX_DJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__4BSgM\",\"red\":\"SuperButton_red__1yDGZ\",\"btn\":\"SuperButton_btn__1xAEc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__1AAtW\",\"column\":\"HW4_column__1KuV_\",\"testSpanError\":\"HW4_testSpanError__3hMB1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__1KKbV\",\"spanClassName\":\"SuperCheckbox_spanClassName__PmJW6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2_oA4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"span\":\"SuperEditableSpan_span__A4tsE\"};","import React from 'react'\n\nfunction Error404() {\n    return (\n        <div>\n            <div>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    )\n}\n\nexport default Error404\n","import React from 'react'\r\n\r\nexport const Junior = () => {\r\n    return (\r\n        <div>\r\n            Junior\r\n        </div>\r\n    );\r\n}","import React from 'react'\r\n\r\nexport const JuniorPlus = () => {\r\n    return (\r\n        <div>\r\n            JuniorPlus\r\n        </div>\r\n    );\r\n}","import React from 'react'\nimport s from './Message.module.css'\n\nexport type MessageDataType = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\nfunction Message(props: MessageDataType) {\n    return (\n        <div className={s.message}>\n            <img src={props.avatar} className={s.avatar} ></img>\n            <div className={s.corner}></div>\n            <div className={s.blok}>\n                <div className={s.name}>{props.name}</div>\n                <div className={s.text}>{props.message}</div>\n                <div className={s.time}>{props.time}</div>\n            </div>\n        </div>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport Message from './Message'\n\nconst messageData = {\n    avatar: 'https://steamuserimages-a.akamaihd.net/ugc/772863840223603020/AAAF98AA16C0AFAF36AB2D8B2F1D3FAE48FF7F71/?imw=512&amp;imh=384&amp;ima=fit&amp;impolicy=Letterbox&amp;imcolor=%23000000&amp;letterbox=true',\n    name: 'Артем',\n    message: 'npm start нажимал?',\n    time: '22:00',\n}\n\nfunction HW1() {\n    return (\n        <div>\n            <hr />\n            homeworks 1\n\n            {/*should work (должно работать)*/}\n\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n\n\n            <hr />\n            {/*для личного творчества, могу проверить*/}\n            {/* <AlternativeMessage/> */}\n            <hr />\n        </div>\n    )\n}\n\nexport default HW1\n","import React from 'react'\nimport { AffairType } from './HW2'\nimport s from './HW2.module.css'\n\ntype AffairPropsType = {\n    affair: AffairType\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => { props.deleteAffairCallback(props.affair._id) }// need to fix\n\n    return (\n        <div>\n            {props.affair.name}\n            <button className={s.deleteCallback} onClick={deleteCallback}>X</button>\n        </div>\n    )\n}\n\nexport default Affair\n","import React from 'react'\nimport Affair from './Affair'\nimport { AffairType, FilterType } from './HW2'\nimport s from './HW2.module.css'\n\n type AffairsPropsType = {\n    data: Array<AffairType>\n    setFilter: (value: FilterType) => void\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n\n    const setAll = () =>  props.setFilter('all');\n    const setHigh = () => props.setFilter('high');\n    const setMiddle = () => props.setFilter('middle');\n    const setLow = () => props.setFilter('low');\n\n    return (\n        <div className={s.buttonNiz}>\n            {mappedAffairs}\n            \n            <button className={s.deleteCallback} onClick={setAll}>All</button>\n            <button className={s.deleteCallback} onClick={setHigh}>High</button>\n            <button className={s.deleteCallback} onClick={setMiddle}>Middle</button>\n            <button className={s.deleteCallback} onClick={setLow}>Low</button>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, { useState } from 'react'\nimport Affairs from './Affairs'\nimport s from './HW2.module.css'\n\n// types\nexport type AffairPriorityType = 'high' | 'low' | 'middle'\n\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: string\n}\n\nexport type FilterType = 'all' | AffairPriorityType\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => {\n    if (filter === 'all') return affairs\n    else return affairs.filter(a => a.priority === filter);\n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => {\n    return affairs.filter(a => a._id !== _id);\n}\n\nfunction HW2() {\n\n    const [affairs, setAffairs] = useState<Array<AffairType>>([\n        { _id: 1, name: 'React', priority: 'high' },\n        { _id: 2, name: 'anime', priority: 'low' },\n        { _id: 3, name: 'Redax', priority: 'low' },\n        { _id: 4, name: 'work', priority: 'high' },\n        { _id: 6, name: 'html & css', priority: 'middle' },\n    ]);\n\n    const [filter, setFilter] = useState<FilterType>('all');\n\n    const filteredAffairs = filterAffairs(affairs, filter);\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id));\n\n    return (\n        <div className={s.title}>\n            <hr />\n\n            Homeworks 2 -\n            Works\n\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n            <hr />\n        </div>\n    )\n}\n\nexport default HW2\n","import React, { ChangeEvent, KeyboardEvent } from 'react'\nimport s from './Greeting.module.css'\n\nexport type GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\n    addUser: () => void // need to fix any\n    error: string | null // need to fix any\n    totalUsers: number // need to fix any\n    onKeyPressHandler: (e: KeyboardEvent<HTMLInputElement>) => void\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    { name, setNameCallback, addUser, error, totalUsers, onKeyPressHandler } // деструктуризация пропсов\n) => {\n    const inputClass = s.error ? s.errorMessages : s.error  // need to fix with (?:)\n\n    return (\n        <div className={s.blok}>\n            <div className={s.input}>\n                <input\n                    value={name}\n                    onChange={setNameCallback}\n                    onKeyDown={onKeyPressHandler}\n                // className={inputClass} \n                />\n\n            \n                <button className={s.btn} onClick={addUser}>add</button>\n                <div className={s.total}>{totalUsers}</div>\n            </div>\n            {/* <div className={s.error}>{error}</div> */}\n\n            {error && <div className={s.errorMessages}>Name is requred</div>}\n        </div>\n    )\n}\n\nexport default Greeting\n\n","import React, { ChangeEvent, KeyboardEvent, useState } from 'react'\nimport Greeting from './Greeting'\nimport { UserType } from './HW3'\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType> // need to fix any\n    addUserCallback: (name: string) => void // need to fix any\n}\n\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({ users, addUserCallback }) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('');\n    const [error, setError] = useState<string | null>(null);\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        setName(e.currentTarget.value)\n    }\n\n    const addUser = () => {\n\n        if (name.trim() !== ('')) {\n            addUserCallback(name)\n            alert(`Hello  ${name}!`) // need to fix\n            setName('')\n        } else{\n            setError('Name is requred')\n        }\n    }\n\n    const onKeyPressHandler =(e: KeyboardEvent<HTMLInputElement>) => {\n        setError(null);\n        if(e.key === 'Enter' && name){\n            addUser();\n        }\n    }\n\n    const totalUsers = users.length // need to fix\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n            onKeyPressHandler={onKeyPressHandler}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, { useState } from 'react'\nimport { v1 } from 'uuid'\nimport GreetingContainer from './GreetingContainer'\n\n\n// types\nexport type UserType = {\n    _id: string // need to fix any\n    name: string // need to fix any\n}\n\n// уровень работы с глобальными данными\n\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\n\n    const addUserCallback = (name: string) => { // need to fix any\n        const user = {\n            _id: v1(),\n            name: name\n        };\n        setUsers([...users, user]) // need to fix\n    }\n\n    return (\n        <div>\n            <hr />\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer\n                users={users}\n                addUserCallback={addUserCallback} />\n\n            <hr />\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr />\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${s.btn ? s.btn : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e);\n        \n        onChangeChecked && onChangeChecked(e.currentTarget.checked)// сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    // spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText'\nimport s from './SuperEditableSpan.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n\n    spanProps?: DefaultSpanPropsType // пропсы для спана\n}\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n    {\n        autoFocus, // игнорировать изменение этого пропса\n        onBlur,\n        onEnter,\n        spanProps,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const [editMode, setEditMode] = useState<boolean>(false)\n\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\n\n    const onEnterCallback = () => {\n        setEditMode(false) // выключить editMode при нажатии Enter\n\n        onEnter && onEnter()\n    }\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n        setEditMode(false) // выключить editMode при нажатии за пределами инпута\n\n        onBlur && onBlur(e)\n    }\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        setEditMode(true) // включить editMode при двойном клике\n\n        onDoubleClick && onDoubleClick(e)\n    }\n\n    const spanClassName = `${s.span} ${className}`\n\n    return (\n        <> \n            {editMode\n                ? (\n                    <SuperInputText\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\n                        onBlur={onBlurCallback}\n                        onEnter={onEnterCallback}\n\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                    />\n                ) : (\n                    <span\n                        onDoubleClick={onDoubleClickCallBack}\n                        className={spanClassName}\n\n                        {...restSpanProps}\n                    >\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\n                        &#128396;{children || restProps.value}\n                    </span>\n                )\n            }\n        </>\n    )\n}\n\nexport default SuperEditableSpan\n","// вот вам функция для сохранения объектов в память браузера\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\nexport function saveState<T>(key: string, state: T) {\n    const stateAsString = JSON.stringify(state)\n    localStorage.setItem(key, stateAsString)\n}\n\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\nexport function restoreState<T>(key: string, defaultState: T) {\n    let state = defaultState\n    const stateAsString = localStorage.getItem(key)\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\n    return state\n}\n\n// ---------------------------------------------------------------------------------------------------------------\n// пример использования:\ntype StateType = {\n    x: string\n    y: number\n}\n\n// сохраняем объект типа StateType в ячейке 'test'\nsaveState<StateType>('test', {x: 'A', y: 1})\n\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\nconst state: StateType = restoreState<StateType>('test', {x: '', y: 0})\n","import React, {useState} from 'react'\nimport SuperEditableSpan from './common/c4-SuperEditableSpan/SuperEditableSpan'\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\nimport {restoreState, saveState} from './localStorage/localStorage'\n\nfunction HW6() {\n    const [value, setValue] = useState<string>('')\n\n    const save = () => {\n        saveState<string>('editable-span-value', value)\n    }\n    const restore = () => {\n        setValue(restoreState<string>('editable-span-value', value))\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 6\n\n            {/*should work (должно работать)*/}\n            <div>\n                <SuperEditableSpan\n                    value={value}\n                    onChangeText={setValue}\n                    spanProps={{children: value ? undefined : 'enter text...'}}\n                />\n            </div>\n            <SuperButton onClick={save}>save</SuperButton>\n            <SuperButton onClick={restore}>restore</SuperButton>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperEditableSpan/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW6\n","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\nimport HW6 from '../../h6/HW6'\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            <HW6/>\n\n        </div>\n    )\n}\n\nexport default PreJunior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\nimport { Redirect, Route, Switch } from 'react-router-dom'\nimport Error404 from './pages/Error404'\nimport { Junior } from './pages/Junior'\nimport { JuniorPlus } from './pages/JuniorPlus'\nimport PreJunior from './pages/PreJunior'\n\nexport const PATH = {\n    PRE_JUNIOR: '/pre-junior',\n    JUNIOR: '/junior',\n    JUNIOR_PLUS: '/junior-plus'\n    \n    // add paths\n}\n\n\nfunction Routes() {\n    return (\n        <div>\n            {/* Switch выбирает первый подходящий роут */}\n            <Switch>\n\n            {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\n            {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\n            <Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\n\n            <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\n            <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\n            <Route path={PATH.JUNIOR_PLUS} render={() => <JuniorPlus/>}/>\n                \n            {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n            <Route render={() => <Error404/>}/>\n\n            </Switch>\n        </div>\n    )\n}\n\nexport default Routes\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { PATH } from './Routes'\nimport s from './Header.module.css'\n\n\n\nfunction Header() {\n\n    return (\n        <div className={s.header}>\n            \n            <NavLink to = {PATH.PRE_JUNIOR} className={s.link} activeClassName={s.active}>pre-junior</NavLink>\n            <NavLink to = {PATH.JUNIOR} className={s.link} activeClassName={s.active}>junior</NavLink>\n            <NavLink to = {PATH.JUNIOR_PLUS} className={s.link} activeClassName={s.active}>junior+</NavLink>\n            <div className={s.blok} > </div>\n        </div>\n    )\n\n}\n\n\n\n\nexport default Header\n","import React, { useState } from 'react'\nimport { HashRouter } from 'react-router-dom'\nimport Header from './Header'\nimport Routes from './Routes'\n\nfunction HW5() {\n    \n    let [ collapsedJun, setCollapsedJun] = useState<boolean>(false)\n    \n\n    return (    \n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            <HashRouter>\n\n            <Header/>\n           \n            <Routes/>\n\n            </HashRouter>\n        </div>\n    )\n}\n\nexport default HW5\n","import React from 'react'\nimport s from './App.module.css'\nimport HW1 from '../../../p2-homeworks/h1/HW1'\nimport HW2 from '../../../p2-homeworks/h2/HW2'\nimport HW3 from '../../../p2-homeworks/h3/HW3'\nimport HW4 from '../../../p2-homeworks/h4/HW4'\nimport HW5 from '../../../p2-homeworks/h5/HW5'\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            {/* <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/> */}\n            <HW5/>\n\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}